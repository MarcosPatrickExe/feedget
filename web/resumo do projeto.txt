
npm create vite@latest

(esse comando permite vc selecionar que tipo de framework
vc ira utilizar no front, criando a estrutura básica logo
em seguida. O vite é ferramenta que permite o browser reconhecer
novas versões do JS )

O webpack faz o processo de bundle. 
Unir os codigos JS e converter em um unico 
arquivo.

O babel converte a versão do JS para que os
browser compreendam o JS para um formato conhecido.

Basicamente o Vite substitui o webpack pois faz uso
do "ESMODULE", a sintaxe necessaria para importar
arquivos JS compreensíveis pelo navegador.

npm install (para instalar os modulos)

npm run dev (para rodar a aplicacao)


=> Em seguida instale a ferramenta tailwind:
npm install -D tailwindcss

ou entao, sugerido:

npm install -D tailwindcss postcss autoprefixer


=> Depois inicialize o tailwind pra q ele crie o arquivo "tailwind.config.js":
npx tailwindcss init

=> Configure o arquivo criado automaticamente com a seguinte estrutura:
module.exports = {
  content: ["./src/**/*.tsx"],
  theme: {
    extend: {},
  },
  plugins: [],
}


=> Logo depois instale o tailwindcss junto com o postcss, o qual
é uma ferramenta de observação conversão de arquivos css que o
browser possa compreender. Integrasse com o vite quando instalado:
npx tailwindcss init -p


**OBS: todas as classes do tailwind utilizam a unidade de medida
'rem' q é relativa ao tamanho da fonte do navegador do usuario


=>Adicione a biblioteca de icones:
npm install phosphor-react


=>Adicionando nova propriedade de cor:
extend: {}

faz assim para criar uma nova cor chamada "brand" com peso 500:

extend: {
   colors: {
   	brand: {
		500: '#8257e6',
	}
   }
}



Componentes de acessibilidade para interação do
usuario:
- Reakit
- Radix
- Headless (já compativel com o tailwind)
É possivel utilizar esses componentes para 
aumentar a acessibilidade, no quesito de abrir
e fechar popover's com a tecla de espaço, passar 
entre eles utilizando o 'tab'....










